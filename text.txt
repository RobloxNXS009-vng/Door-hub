local function SafeWaitForChild(parent, childName)
    local success, result = pcall(function()
        return parent:WaitForChild(childName)
    end)
    if not success or not result then
        warn("noooooo: " .. childName)
    end
    return result
end

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer

if not Player then return end

local Remotes = SafeWaitForChild(ReplicatedStorage, "Remotes")
if not Remotes then return end
local CommF = SafeWaitForChild(Remotes, "CommF_")
local CommE = SafeWaitForChild(Remotes, "CommE")

local Workspace = game:GetService("Workspace")

local KeyESP = {}
local ItemESP = {}
local EntityESP = {}

_G.ESPKeys = false
_G.ESPItems = false
_G.ESPEntity = false
_G.AutoPickKey = false
_G.AutoUseCrucifix = false
_G.AntiScreech = false
_G.NoclipEnabled = false

local function Character()
    return Player.Character or Player.CharacterAdded:Wait()
end

local TweenService = game:GetService("TweenService")
local TweenSpeed = 350
local function TweenToCFrame(targetCFrame)
    if not targetCFrame then return end
    local hrp = Character():FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local distance = (targetCFrame.Position - hrp.Position).Magnitude
    local tweenInfo = TweenInfo.new(math.max(0.2, distance / TweenSpeed), Enum.EasingStyle.Linear)
    local tween = TweenService:Create(hrp, tweenInfo, {CFrame = targetCFrame})
    tween:Play()
    return tween
end

local function round(n) return math.floor(tonumber(n) + 0.5) end

local function CreateHighlightForPart(part, tbl, labelText, color)
    if not part or not part:IsA("BasePart") then return end
    if tbl[part] then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "BF_Doors_Hl"
    highlight.Adornee = part
    highlight.FillTransparency = 0.6
    if color then highlight.FillColor = color end
    highlight.Parent = part
    local bill = Instance.new("BillboardGui")
    bill.Name = "BF_Doors_Bill"
    bill.Adornee = part
    bill.AlwaysOnTop = true
    bill.Size = UDim2.new(0,180,0,40)
    bill.StudsOffset = Vector3.new(0,2.2,0)
    bill.Parent = part
    local lbl = Instance.new("TextLabel", bill)
    lbl.Size = UDim2.new(1,0,1,0)
    lbl.BackgroundTransparency = 1
    lbl.TextWrapped = true
    lbl.Font = Enum.Font.GothamSemibold
    lbl.TextSize = 14
    lbl.Text = labelText or part.Name
    tbl[part] = {highlight=highlight, bill=bill}
end

local function RemoveHighlightForPart(part, tbl)
    if not part then return end
    local entry = tbl[part]
    if entry then
        if entry.highlight and entry.highlight.Parent then entry.highlight:Destroy() end
        if entry.bill and entry.bill.Parent then entry.bill:Destroy() end
        tbl[part] = nil
    end
end

local function IsKey(obj)
    return (obj.Name:lower():find("key") ~= nil) and obj:IsA("BasePart")
end
local function IsItem(obj)
    local n = obj.Name:lower()
    if not obj:IsA("BasePart") then return false end
    return n:find("crucifix") or n:find("candle") or n:find("lockpick") or n:find("lighter")
end
local function IsEntity(obj)
    local n = obj.Name:lower()
    return (n:find("rush") or n:find("screech") or n:find("ambush") or n:find("figure") or n:find("seek")) and obj:FindFirstChild("HumanoidRootPart")
end

local function UpdateESPLabels(tbl)
    for part,entry in pairs(tbl) do
        if part and part.Parent and entry and entry.bill and entry.bill:FindFirstChildOfClass("TextLabel") then
            local lbl = entry.bill:FindFirstChildOfClass("TextLabel")
            local hrp = Character():FindFirstChild("HumanoidRootPart")
            if lbl and hrp then
                local dist = round((hrp.Position - part.Position).Magnitude)
                lbl.Text = part.Name .. "\n" .. tostring(dist) .. " studs"
            end
        else
            tbl[part] = nil
        end
    end
end

local function ScanWorkspaceAndMakeESP()
    for _, obj in ipairs(Workspace:GetDescendants()) do
        pcall(function()
            if _G.ESPKeys and IsKey(obj) then
                CreateHighlightForPart(obj, KeyESP, "Key", Color3.fromRGB(0,255,0))
            end
            if _G.ESPItems and IsItem(obj) then
                CreateHighlightForPart(obj, ItemESP, obj.Name, Color3.fromRGB(255,200,0))
            end
            if _G.ESPEntity and IsEntity(obj) then
                CreateHighlightForPart(obj.HumanoidRootPart or obj, EntityESP, obj.Name, Color3.fromRGB(255,50,50))
            end
        end)
    end
end

Workspace.DescendantAdded:Connect(function(obj)
    pcall(function()
        if _G.ESPKeys and IsKey(obj) then
            CreateHighlightForPart(obj, KeyESP, "Key", Color3.fromRGB(0,255,0))
        end
        if _G.ESPItems and IsItem(obj) then
            CreateHighlightForPart(obj, ItemESP, obj.Name, Color3.fromRGB(255,200,0))
        end
        if _G.ESPEntity and IsEntity(obj) then
            CreateHighlightForPart(obj.HumanoidRootPart or obj, EntityESP, obj.Name, Color3.fromRGB(255,50,50))
        end
        if _G.AutoPickKey and IsKey(obj) then
            local prompt = obj:FindFirstChildOfClass("ProximityPrompt")
            if prompt then
                pcall(function() prompt:InputHoldBegin(); task.wait(0.05); prompt:InputHoldEnd() end)
            end
        end
        if _G.AntiScreech and obj.Name:lower():find("screech") then
            local hrp = Character():FindFirstChild("HumanoidRootPart")
            if hrp then TweenToCFrame(hrp.CFrame * CFrame.new(0,0,-10)) end
        end
    end)
end)

RunService.Heartbeat:Connect(function()
    if _G.ESPKeys then UpdateESPLabels(KeyESP) end
    if _G.ESPItems then UpdateESPLabels(ItemESP) end
    if _G.ESPEntity then UpdateESPLabels(EntityESP) end
    if _G.NoclipEnabled then
        local char = Character()
        if char then
            for _,part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then part.CanCollide=false end
            end
        end
    end
end)

ScanWorkspaceAndMakeESP()

local FastAttack = {
    Distance = 100
}

local RegisterAttack = SafeWaitForChild(Net, "RE/RegisterAttack")
local RegisterHit = SafeWaitForChild(Net, "RE/RegisterHit")

local function IsAlive(character)
    return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
end

local function ProcessEnemies(OthersEnemies, Folder)
    local BasePart = nil
    for _, Enemy in Folder:GetChildren() do
        local Head = Enemy:FindFirstChild("Head")
        if Head and IsAlive(Enemy) and Player:DistanceFromCharacter(Head.Position) < FastAttack.Distance then
            if Enemy ~= Player.Character then
                table.insert(OthersEnemies, { Enemy, Head })
                BasePart = Head
            end
        end
    end
    return BasePart
end

function FastAttack:Attack(BasePart, OthersEnemies)
    if not BasePart or #OthersEnemies == 0 then return end
    RegisterAttack:FireServer(Settings.ClickDelay or 0)
    RegisterHit:FireServer(BasePart, OthersEnemies)
end

function FastAttack:AttackNearest()
    local OthersEnemies = {}
    local Part1 = ProcessEnemies(OthersEnemies, Enemies)
    local Part2 = ProcessEnemies(OthersEnemies, Characters)
    if #OthersEnemies > 0 then
        self:Attack(Part1 or Part2, OthersEnemies)
    end
end

function FastAttack:BladeHits()
    local Equipped = IsAlive(Player.Character) and Player.Character:FindFirstChildOfClass("Tool")
    if Equipped and Equipped.ToolTip ~= "Gun" then
        self:AttackNearest()
    end
end

task.spawn(function()
    while task.wait(Settings.ClickDelay) do
        if Settings.AutoClick then
            FastAttack:BladeHits()
        end
    end
end)

_ENV.rz_FastAttack = FastAttack

if getgenv().Team == "Marines" then
    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Marines")
elseif getgenv().Team == "Pirates" then
    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
end

repeat
    task.wait(1)
    local chooseTeam = playerGui:FindFirstChild("ChooseTeam", true)
    local uiController = playerGui:FindFirstChild("UIController", true)

    if chooseTeam and chooseTeam.Visible and uiController then
        for _, v in pairs(getgc(true)) do
            if type(v) == "function" and getfenv(v).script == uiController then
                local constant = getconstants(v)
                pcall(function()
                    if (constant[1] == "Pirates" or constant[1] == "Marines") and #constant == 1 then
                        if constant[1] == getgenv().Team then
                            v(getgenv().Team)
                        end
                    end
                end)
            end
        end
    end
until player.Team

hookfunction(require(ReplicatedStorage.Effect.Container.Death), function() end)
hookfunction(require(ReplicatedStorage.Effect.Container.Respawn), function() end)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Then hub",
    SubTitle = "Blox Fruits", 
    TabWidth = 155, 
    Theme = "Darker",
    Acrylic = false,
    Size = UDim2.fromOffset(555, 320), 
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Info = Window:AddTab({Title="Thông tin"}),
    Main = Window:AddTab({Title="Cày"}),
    Main1 = Window:AddTab({Title="cày khác"}),
    Sea = Window:AddTab({Title="Sự kiện biển"}),
    Item = Window:AddTab({Title="cày đồ"}),
    Setting = Window:AddTab({Title="Cài đặt"}),
    Status = Window:AddTab({Title="Trạng thái"}),
    Stats = Window:AddTab({Title="Điểm chỉ số"}),
    Player = Window:AddTab({Title="Người chơi"}),
    Teleport = Window:AddTab({Title="Dịch chuyển"}),
    Visual = Window:AddTab({Title="Ảo giác"}),
    Fruit = Window:AddTab({Title="Trái cây"}),
    Raid = Window:AddTab({Title="Thức tỉnh"}),
    Race = Window:AddTab({Title="Tộc"}),
    Shop = Window:AddTab({Title="Cửa hàng"}),
    Misc = Window:AddTab({Title="Khác"}),
}

local Options = Fluent.Options
local placeId = game.PlaceId
local Sea1, Sea2, Sea3 = false, false, false
if placeId == 2753915549 then Sea1 = true
elseif placeId == 4442272183 then Sea2 = true
elseif placeId == 7449423635 then Sea3 = true
else game:Shutdown() end

Players.LocalPlayer.Idled:Connect(function()
    local vu = game:GetService("VirtualUser")
    vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    task.wait()
    vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)